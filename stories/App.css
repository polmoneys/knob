*,
:after,
:before {
  box-sizing: border-box;
  color: currentColor;
}
* {
  margin: 0;
  padding: 0;
  scroll-behavior: smooth;
}
body {
  font-family: sans-serif;
}

h1 {
  text-align: left;
}

header {
  padding: 0.5em;
}

header a {
  display: flex;
  transition: color 0.2s ease-in-out;
  color: red;
  cursor: pointer;
}
header a:hover {
  color: #444;
}
header svg {
  max-width: 100px;
  pointer-events: none;
}

aside {
  background: #bababa;
  padding: 2em;
  display: flex;
  flex-wrap: wrap;
  gap: 2em;
}
.grid {
  display: flex;
  flex-wrap: wrap;
  gap: 3em;
  align-items: center;
  justify-content: center;
}
@media (orientation: landscape) {
  aside {
    position: fixed;
    top: 2em;
    right: 2em;
    height: fit-content;
    overflow-y: auto;
    padding: 2em;
    display: flex;
    flex-direction: column;
  }

  .grid {
    display: grid;
    gap: 2em;
    grid-template-columns: 60px 60px;
  }

  .grid > div {
    display: grid;
    place-items: center;
    aspect-ratio: 1;
    cursor: pointer;
  }

  header {
    padding: 0;
    position: fixed;
    top: 2em;
    left: 2em;
    z-index: 9;
  }
}

aside [data-knob='label'] * {
  font-size: 8px;
}

aside svg {
  pointer-events: none;
}

main {
  position: relative;
  width: 100%;
  min-height: 60vh;
  max-width: 1444px;
  margin-inline: auto;
  display: grid;
  place-content: center;
  place-items: center;
}
@media (orientation: landscape) {
  main {
    min-height: 100vh;
  }
}

.knob-pop {
  background-color: #eee;
  background-image: linear-gradient(#f7f7f7, #e0e0e0);
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.15), 0 2px 2px rgba(0, 0, 0, 0.2);
}
.knob-pull {
  box-shadow: inset 0 0 0 1px white, inset 0 2px 4px 0 rgba(0, 0, 0, 0.4);
}

.emoji {
  background: currentColor;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  transition: all 1s ease-in forwards;
  pointer-events: none;
  transform: scale(1.9);
}

[data-t='yes'] {
  box-shadow: inset 0 0 0 1px white, inset 0 2px 4px 0 rgba(0, 0, 0, 0.4) !important;
  background: conic-gradient(
    from var(--start),
    rgba(255, 255, 255, 1) 2deg,
    rgba(0, 0, 0, 0.5) var(--end),
    rgba(255, 255, 255, 1) 2deg,
    rgba(0, 0, 0, 0.7)
  ) !important;
}
